<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picboxPersonalPhoto.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>